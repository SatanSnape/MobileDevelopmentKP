// <auto-generated />
using System;
using KetelTestWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KetelTest.Migrations
{
    [DbContext(typeof(MainDBContext))]
    partial class MainDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KetelTest.Models.FinalQuery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Result");

                    b.Property<int>("TestPresentation");

                    b.Property<int>("Ticket");

                    b.HasKey("ID");

                    b.HasIndex("TestPresentation");

                    b.ToTable("FinalQueries");
                });

            modelBuilder.Entity("KetelTest.Models.TestFinal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerID");

                    b.Property<int>("Mark");

                    b.Property<int>("QuestionID");

                    b.Property<string>("Type");

                    b.HasKey("ID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("QuestionID");

                    b.ToTable("TestFinals");
                });

            modelBuilder.Entity("KetelTest.Models.TestInterpretation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MarkMax");

                    b.Property<int>("MarkMin");

                    b.Property<string>("Type");

                    b.HasKey("ID");

                    b.ToTable("TestInterpretations");
                });

            modelBuilder.Entity("KetelTest.Models.TestResultUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TestFinalID");

                    b.Property<int>("TestResultID");

                    b.HasKey("ID");

                    b.HasIndex("TestFinalID");

                    b.HasIndex("TestResultID");

                    b.ToTable("TestResultUsers");
                });

            modelBuilder.Entity("KetelTestWeb.Models.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerContent");

                    b.Property<int>("QuestionID");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("KetelTestWeb.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionContent");

                    b.HasKey("ID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("KetelTestWeb.Models.Statisics", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TestResultID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("TestResultID");

                    b.HasIndex("UserID");

                    b.ToTable("Statisics");
                });

            modelBuilder.Entity("KetelTestWeb.Models.TestResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.HasKey("ID");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("KetelTestWeb.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Birthday");

                    b.Property<string>("Nickname");

                    b.Property<string>("PasswordHash");

                    b.Property<bool>("Sex");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KetelTestWeb.Models.UserAnswer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerID");

                    b.Property<int>("QuestionID");

                    b.Property<int>("TestResultID");

                    b.HasKey("ID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("TestResultID");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("KetelTest.Models.FinalQuery", b =>
                {
                    b.HasOne("KetelTest.Models.TestInterpretation", "TestInterpretation")
                        .WithMany("FinalQueries")
                        .HasForeignKey("TestPresentation")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KetelTest.Models.TestFinal", b =>
                {
                    b.HasOne("KetelTestWeb.Models.Answer", "Answer")
                        .WithMany("TestFinals")
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KetelTestWeb.Models.Question", "Question")
                        .WithMany("TestFinals")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KetelTest.Models.TestResultUser", b =>
                {
                    b.HasOne("KetelTest.Models.TestFinal", "TestFinal")
                        .WithMany("TestResultUsers")
                        .HasForeignKey("TestFinalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KetelTestWeb.Models.TestResult", "TestResult")
                        .WithMany("TestResultUsers")
                        .HasForeignKey("TestResultID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KetelTestWeb.Models.Answer", b =>
                {
                    b.HasOne("KetelTestWeb.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KetelTestWeb.Models.Statisics", b =>
                {
                    b.HasOne("KetelTestWeb.Models.TestResult", "TestResult")
                        .WithMany("Statisics")
                        .HasForeignKey("TestResultID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KetelTestWeb.Models.User", "User")
                        .WithMany("Statisics")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KetelTestWeb.Models.UserAnswer", b =>
                {
                    b.HasOne("KetelTestWeb.Models.Answer", "Answer")
                        .WithMany("UserAnswers")
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KetelTestWeb.Models.Question", "Question")
                        .WithMany("UserAnswers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KetelTestWeb.Models.TestResult", "TestResult")
                        .WithMany("UserAnswers")
                        .HasForeignKey("TestResultID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
